var searchIndex = {};
searchIndex["dense-bitset"] = {"doc":"A dense bit set implemented over Vec","items":[[3,"DenseBitSet","dense-bitset","A dense bit set implemented over Vec ",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"densebitset"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":{"name":"bool"}}],[11,"with_capacity","","Creates a `DenseBitSet` that can contain at least num_bits bits",0,{"inputs":[{"name":"usize"}],"output":{"name":"densebitset"}}],[11,"set","","Sets the ith bit",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"test","","Tests whether the ith bit is set",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"toggle","","if the ith",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"words","","returns the number of elements in the underlying Vec",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","returns the number of bits this set can accomodate",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"print","","prints the bitset to STDOUT",0,{"inputs":[{"name":"self"}],"output":null}],[11,"not","","bitwise not all the bits in the bitset",0,{"inputs":[{"name":"self"}],"output":null}],[11,"and","","Combining functions",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":null}],[11,"or","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":null}],[11,"xor","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":null}]],"paths":[[3,"DenseBitSet"]]};
searchIndex["lib"] = {"doc":"A dense bit set implemented over Vec","items":[[3,"DenseBitSet","lib","A dense bit set implemented over Vec ",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"densebitset"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":{"name":"bool"}}],[11,"with_capacity","","Creates a `DenseBitSet` that can contain at least num_bits bits",0,{"inputs":[{"name":"usize"}],"output":{"name":"densebitset"}}],[11,"set","","Sets the ith bit",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"test","","Tests whether the ith bit is set",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"toggle","","if the ith",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"words","","returns the number of elements in the underlying Vec",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","returns the number of bits this set can accomodate",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"print","","prints the bitset to STDOUT",0,{"inputs":[{"name":"self"}],"output":null}],[11,"not","","bitwise not all the bits in the bitset",0,{"inputs":[{"name":"self"}],"output":null}],[11,"and","","Combining functions",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":null}],[11,"or","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":null}],[11,"xor","","",0,{"inputs":[{"name":"self"},{"name":"densebitset"}],"output":null}]],"paths":[[3,"DenseBitSet"]]};
initSearch(searchIndex);
